53cf68736a5671ad005b40ea7a135af788361a3d



video capture:
- importing numpy fails inside of numpy when using imu seemingly
- otherwise with --force-no-imu IT WORKS
IF YOU INTERRUPT PYTHON WITH CTRL C WHILE IT IS IMPORTING a file like numpy then it will error out as if that import failed but really it didn't!!!!!!!!!: for example:
```
ImportError: numpy.core.multiarray failed to import
    File: "�"
    Line: 127
    p��
    ^
Traceback:
  [01] subscale_driver/videoCapture.py: 3
    import cv2
Main dispatch queue waiting for next function...
^CCaught signal 2. Stopping current main dispatch queue task...
```







--
drop test commands:

VIDEO CAPTURE:
./subscale_exe_debug --video-capture  --backup-takeoff-time 0  --main-deployment-g-force 1.5 --backup-sift-start-time 2000

SIFT PI:
./subscale_exe_debug --sift-start-time 2000  --backup-takeoff-time 0  --main-deployment-g-force 1.5 --backup-sift-start-time 0

sift test:
/sift_exe_release_commandLine --sift-params -delta_min 0.6 -C_edge 2 --main-mission


-- new commands:

PREPARE:
./subscale.sh subscale2_goodMostly


--tips for mophie
SWAP TO THE battery icon port in usb for full power to lora so it doesnt hang etc.







-- post subscale 2 launch
the problem: video capture testing timing was enabled
altitude offset: 50 feet (constant, since actual apogee was 1181 (brian); we got 1133. on the ground we had 614, and ethan's phone said 660-670.

ADD TO the checklist: check timing of SIFT pi and the IMU pi

cd dataOutput
ls -t | head -n 26 | xargs tar --xattrs --acls --preserve-permissions -H posix --use-compress-program='gzip -9' -cf "../filesaaa.tar.gz" && echo $? # <-- Use instead    #ls -t | head -n 26 | xargs tar --xattrs --acls --preserve-permissions -H posix --use-compress-program='gzip' -cf "../filesaaa.gzip" && echo $?
ls -t | head -n 26 | xargs -i{} -n 1 find {} -exec stat {} \; > ../ctimes.txt

final gzip: tar --use-compress-program='gzip -9' -cf ./subscale2_data.tar.gz ./files*.gzip ./ctimes*




-- preparing for fullscale1: testing commands:

./subscale_exe_debug --sift-start-time 2000  --backup-takeoff-time 10000000  --main-deployment-g-force 1.5  --imu-data-source-path Data/subscale2/SIFT/LOG_20220130_014355.csv --backup-sift-start-time 100000 --backup-sift-stop-time 10000 --verbose --imu-data-source-time-offset 374000

subscale_driver/LIS331_loop.py 0 0.500000 10000 subscale_driver/LIS331HH_calibration/LOG_20220129-183224.csv 20000


./subscale_exe_debug --sift-start-time 2000  --backup-takeoff-time 10000000  --main-deployment-g-force 0.5  --imu-data-source-path Data/subscale2/SIFT/LOG_20220130_014355.csv --backup-sift-start-time 100000 --backup-sift-stop-time 10000 --verbose --imu-data-source-time-offset 374000 --sift-params '-C_edge 2 -delta_min 0.6' --extra-sift-exe-args '--video-file-data-source --video-file-data-source-path /home/pi/VanderbiltRocketTeam/dataOutput/2022-01-30_01_50_07_CST/output.mp4'

work towards a feb 19th launch date.

make -j5 sift_exe_release_commandLine subscale_exe_release

-- new drop test commands:

SIFT PI:
./subscale_exe_debug --takeoff-g-force 0 --sift-start-time 0  --backup-takeoff-time 0  --main-deployment-g-force 1.5 --backup-sift-start-time 0 --backup-sift-stop-time 999999999999 --sift-params '-C_edge 2 -delta_min 0.6' --extra-sift-exe-args '--fps 10'


./subscale_exe_debug --takeoff-g-force 0 --sift-start-time 0  --backup-takeoff-time 0  --main-deployment-g-force 1.5 --backup-sift-start-time 0 --backup-sift-stop-time 10000 --sift-params '-C_edge 2 -delta_min 0.6' --extra-sift-exe-args '--fps 30 --save-every-n-seconds -1'

./subscale_exe_debug --takeoff-g-force 0 --sift-start-time 0  --backup-takeoff-time 0  --main-deployment-g-force 1.5 --backup-sift-start-time 0 --backup-sift-stop-time 10000 --sift-params '-C_edge 2 -delta_min 0.6' --extra-sift-exe-args '--fps 6'

./subscale_exe_debug --takeoff-g-force 0 --sift-start-time 0  --backup-takeoff-time 0  --main-deployment-g-force 1.5 --backup-sift-start-time 0 --backup-sift-stop-time 15000 --sift-params '-C_edge 2 -delta_min 0.6' --extra-sift-exe-args '--fps 6 --save-every-n-seconds -1' 2>&1 | tee "./dataOutput/$(date +"%Y_%m_%d_%I_%M_%S_%p").$mode""log.txt"
start, then 4 second countdown: 4 3 2 1 throw

./subscale_exe_debug --imu-record-only
#[nvm, the above does video capture already even though it shouldnt] python3 subscale_driver/videoCapture.py # with no flush: replace `if duration.total_seconds() >= 2` with `if duration.total_seconds() >= 1111111112`

/home/pi/VanderbiltRocketTeam/dataOutput/2022-02-13_14_24_00_CST/live0.mp4
/home/pi/VanderbiltRocketTeam/dataOutput/2022-02-13_15_38_04_CST/live0.mp4


./dataOutput/LOG_20220213_155631.csv

/home/pi/VanderbiltRocketTeam/dataOutput/2022-02-13_15_56_32_/outpy02_13_2022_15_56_32.mp4
/home/pi/VanderbiltRocketTeam/dataOutput/LOG_20220213_155631.csv is for the above

camera shatterred/corrupt halfway down:
/home/pi/VanderbiltRocketTeam/dataOutput/2022-02-13_16_05_06_/outpy02_13_2022_16_05_06.mp4
/home/pi/VanderbiltRocketTeam/dataOutput/LOG_20220213_160504.csv


--- fullscale

time for main stabilization: 10 seconds
descent total: 38.5 seconds
time to main deployment: 67.5

LOOKUP TABLE
+------------------------+-------------------------+-------------------------+
|command-line arg        |Sebastian/Ethan-readable |Value in milliseconds    |
|                        |                         |                         |
+------------------------+-------------------------+-------------------------+
|--sift-start-time       |Stabalization time after |10,000                   |
|                        |main deployment          |                         |
+------------------------+-------------------------+-------------------------+
|--backup-sift-start-time|Time to main deployment  |67,500                   |
|                        |                         |                         |
+------------------------+-------------------------+-------------------------+
|--backup-takeoff-time   |Time we sleep for when   |30,000                   |
|                        |IMU fails on the pad or  |                         |
|                        |right when takeoff       |                         |
|                        |happens                  |                         |
+------------------------+-------------------------+-------------------------+
|--backup-sift-stop-time |This time is how long to |                         |
|                        |run SIFT. We likely want |                         |
|                        |to stop SIFT before it   |                         |
|                        |hits the ground          |                         |
+------------------------+-------------------------+-------------------------+
|                        |                         |                         |
|                        |                         |                         |
+------------------------+-------------------------+-------------------------+


pink in video = not connected to a pull down resistor

--- more testing

full sift + driver/imu test: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
```
#offsetInTime=$((30000-4000))
offsetInTime=$((18000-4000))

mainStabilizationTime=0 #$((offsetInTime + 20000)) # Time to allow rocket to stabilize after main deployment, then running SIFT.
mainDeploymentToTouchDown=74000 # milliseconds
siftAllowanceForStopping=10000 # Time to take away from mainDeploymentToTouchDown for stopping SIFT in backupSIFTStopTime. Larger values stop SIFT sooner.
timeToMainDeployment=10000 # Originally we were going to start SIFT on main deployment. But we use this instead since unsure about IMU trigger on 1 g of main deployment, and there's a fallback via --backup-sift-start-time for this.
backupSIFTStopTime="$(($mainDeploymentToTouchDown-$siftAllowanceForStopping))"
./subscale_exe_release --sift-start-time $mainStabilizationTime --takeoff-g-force 0.5  --backup-takeoff-time 10000000  --main-deployment-g-force 1.2 --imu-data-source-path Data/subscale2/SIFT/LOG_20220130_014355.csv --backup-sift-start-time 4000 --backup-sift-stop-time 3000 --imu-data-source-time-offset $(($offsetInTime + 359768)) --sift-params '-C_edge 2 -delta_min 0.6' --extra-sift-exe-args '--video-file-data-source --video-file-data-source-path Data/subscale2/SIFT/2022-01-30_01_50_07_CST/output.mp4' --meco 500 --landing-g-force 9999999
# IMU data source offset location: https://github.com/VADL-2022/IMU_VV/blob/main/Data/Subscale2/VN/Subscale2_Truncated_014355.csv like 10th row
# old sift args: --main-mission-interactive
# --verbose
# (generate output.mp4 using `./mergeVideosInDataOutput.sh Data/subscale2/SIFT/2022-01-30_01_50_07_CST/`)
```

sift only test @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

XAUTHORITY=/home/pi/.Xauthority ./sift_exe_release_commandLine --video-file-data-source --video-file-data-source-path Data/subscale2/SIFT/2022-01-30_01_50_07_CST/output.mp4 --main-mission-interactive --main-mission --sift-params -C_edge 2 -delta_min 0.6 --sleep-before-running 0


--- video capture testing @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

./subscale_exe_release --video-capture  --meco 1000 --time-to-apogee 5000 --backup-sift-stop-time 20000 --backup-takeoff-time 0

--- sift pi testing @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

./subscale_exe_release --meco 1000 --time-to-apogee 5000 --backup-sift-stop-time 20000 --backup-takeoff-time 0 --sift-start-time 2000 --backup-sift-start-time 2000 --extra-sift-exe-args '--fps 3' --sift-params '-C_edge 2 -delta_min 0.6'


------ launch fullscale day

EVENT TIMING:

SIFT:
takeoff
main deployment: 67.5s
main stabalization: ~10 seconds
landing: 106 seconds

FORE:
takeoff
apogee: 17.6 sec
landing: 106 sec

-- extracting data: run this whole thing:

[see extractDataOutput.sh]

From your laptop, run these commands in `nix-shell -p coreutils`:
missionName=fullscale1
ip=10.3.141.1
#FIXME: spaces not supported:
files="$(ssh pi@$ip << EOF
echo /home/pi/VanderbiltRocketTeam/files* | grep -o --perl-regexp '^.*'"$missionName\.tar\.gz"'$'
EOF
     )"
files="$(echo "$files" | tail -1)" # tail to get past other junk like "Linux fore1 5.10.63-v8+ #1457 SMP PREEMPT Tue Sep 28 11:27:02 BST 2021 aarch64 The programs included with the Debian GNU/Linux system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law"
# Get more files
files2="$(ssh pi@$ip << EOF
echo /home/pi/VanderbiltRocketTeam/Data/files* | grep -o --perl-regexp '^.*'"$missionName\.tar\.gz"'$'
EOF
     )"
files2="$(echo "$files2" | tail -1)"

files="$files $files2"
echo "Files: $files"
files=$(echo "$files" | xargs -n 1 echo | awk '{print "pi@'"$ip"':"$0}')
scp -r -p $files /Volumes/MyTestVolume/Projects/DataRocket/
